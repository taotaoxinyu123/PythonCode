第一，基本介绍
1）Flask是一个由Python语言写成的轻量级Web框架。Flask最显著的特点是它是一个“微”框架，轻便灵活，但同时又易于扩展。默认情况下，Flask 只相当于一个内核，不包含数据库抽象层(ORM)、用户认证、表单验证、发送邮件等其它Web框架经常包含的功能。Flask依赖用各种灵活的扩展（比如邮件Flask-Mail，用户认证Flask-Login，数据库Flask-SQLAlchemy）来给Web应用添加额外功能。Flask的这种按需扩展的灵活性是很多程序员喜欢它的地方。Flask没有指定的数据库，可以用MySQL，也可以用 NoSQL。

2）Django是一个开源的Python Web应用框架，采用了MVT的框架模式，即模型M，视图V和模版T，最早于2005年发布。Django被认为是"大而全"的重量级Web框架，其自带大量的常用工具和组件（比如数据库ORM组件、用户认证、权限管理、分页、缓存), 甚至还自带了管理后台Admin，适合快速开发功能完善的企业级网站。Django自带免费的数据SQLite，同时支持MySQL与PostgreSQL等多种数据库。

第二，流行度
Flask和Django均是当今最流行的Python Web框架。截至2019年9月2日，Flask在Github上的星数是46179颗，Django的Github星数是43806颗，两者几乎难分伯仲，其它Python Web框架与Flask和Django星数相差甚远。考虑到Django早发布5年，而Flask在星数上还领先2000多颗，由此可以得知Flask当前略微占优。

第三，性能
差不多

第四，文档和社区
Django的文档要更丰富些，目前总的社区人数要更大点。Overstackflow上Django的问题与回答数大概是Flask的3倍以上。不过Flask社区目前也在成长，且速度惊人

第五，如何选择
其实古人早有答案，杀鸡焉用牛刀。
1）如果你只需要开发一个轻量级网站或者特定的微服务（比如API)，你根本用不上Django自带的大而全的组件和功能，这时你应该毫不犹豫地选择Flask。当你想尝试新的技术时，使用Flask也会是个更好的选择，轻便而灵活。
2）如果你的开发项目目标明确，就是要开发包含各种功能的传统企业级网站（比如电商，新闻内容管理，社交网站，办公OA)，使用Django能帮你节省不少寻找或开发第三方扩展的精力。开发企业级网站通常由一个团队来进行，Django可插拔式的APP设计思想和刚性的项目结构便于团队后期维护项目代码。

第六，性格
从个性上而言，如果你喜欢自由灵活，你就选Flask。如果你是结果导向型且怕麻烦的，建议直接Django。
